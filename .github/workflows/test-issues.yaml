name: Test Workflow

on:
  workflow_dispatch:

jobs:
  create-issue:
    runs-on: ubuntu-latest
    permissions:
      issues: write
    steps:
      - name: Create issue
        id: create-issue
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const assignee = "ggazzi";

            const issues = await github.rest.issues.listForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo,
              assignee: "ggazzi",
              labels: "failure-tracker",
            });

            if (issues.data.length !== 1) {
              console.error(`Expected a single failure-tracker for ${assignee}, but found ${issues.data.length}`);
              for (const issue of issues.data) {
                console.error(`Issue #${issue.number}: ${issue.title}`);
              }
              process.exit(1);
            }

            const trackingIssue = issues.data[0];
            console.log(`Found tracking issue #${trackingIssue.number}: ${trackingIssue.title}`);

            const now = new Date().toISOString();
            const runUrl = `${context.serverUrl}/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId}`;

            const subIssue = await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: `Test failure at ${now}`,
              body: `Failure detected in [workflow run](${runUrl}).`,
              labels: ['failure-instance']
            });
            github.rest.issues.addSubIssue({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: trackingIssue.number,
              sub_issue_id: subIssue.data.number
            });
            

            console.log(`Created sub-issue #${subIssue.data.number}: ${subIssue.data.title}`);