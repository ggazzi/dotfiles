#!/usr/bin/env bash
#
# Remove all local branches without an associated remote branch

set -ue

REMOTES_TO_REGEX='
  BEGIN { prefix="(" }
  match($0, /[^/]+\/([^ ]+)/, capt) {
    printf "%s%s", prefix, capt[1];
	prefix="|"
  }
  END {
    if (prefix == "(")
	  print "*"
	else
	  print ")"
  }
'

current_branch="$(git rev-parse --abbrev-ref HEAD)"
remote_branches_regex="$(git branch -r | gawk "$REMOTES_TO_REGEX")"
orphan_branches="$(git branch | sed 's/^..//' | grep -Ev "$remote_branches_regex")"

if [ -z "$orphan_branches" ]; then
  echo "No orphan branches to remove." >&2
  exit 0
fi

orphan_branches_without_current="$(echo "$orphan_branches" | grep -Fv "$current_branch")"
if [ ${#orphan_branches[@]} -eq ${#orphan_branches_without_current[@]} ]; then
  echo "Skipping removal of branch '$current_branch', as it is checked out." >&2
fi

git branch -d "${orphan_branches[@]}"
